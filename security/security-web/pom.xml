<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>security-web</artifactId>
    <packaging>war</packaging>
    <parent>
        <groupId>com.mytest</groupId>
        <artifactId>security</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!--
      Please generate the war file using following Maven command.
        * Generate for local development environment
             mvn clean package
        * Generate for test or production environment (exclude the projectName-env.jar)
             mvn -P warpack clean package
        * Generate for test or production environment (include the projectName-env.jar)
             mvn -P warpack-with-env clean package
    -->
    <profiles>
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>security-env</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>warpack</id>
        </profile>
        <profile>
            <id>warpack-with-env</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>security-env</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <dependencies>
        <!--== Import domain START ==-->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>security-domain</artifactId>
        </dependency>
        <!--== Import domain END ==-->

        <!--== Jaxax START ==-->
        <!-- Java(TM) EE 7 Specification APIs -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <!-- only use in compile and test -->
            <scope>provided</scope>
        </dependency>
        <!-- Java Servlet API -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- Expression Language API -->
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>el-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>
        <!--== Jaxax END ==-->

        <!--== Spring START ==-->
        <!-- Spring Context -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <!-- Spring Web MVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <!-- Spring Security Web -->
        <!-- 包含filters和相关web安全的基础代码。如果我们需要使用Spring Security进行web安全验证和基于URL的访问控制 -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <!-- Spring Security Config -->
        <!-- 包含security namespace的解析代码，如果你使用Spring Security XML进行安全配置。我们不应该在代码中直接使用这个jar中的类 -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <!-- Spring Security Taglibs -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <!--== Spring END ==-->

        <!--== Hibernate START ==-->
        <!-- Hibernate validator -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <!--==  Hibernate END ==-->

        <!--== Others START ==-->
        <!-- JSTL Tags -->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- Apache tiles -->
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-core</artifactId>
        </dependency>
        <!-- Apache tiles JSP -->
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-el</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Apache commons lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.18</version>
            <scope>provided</scope>
        </dependency>
        <!--== Others END ==-->
    </dependencies>
</project>